The ``7-base_geometry`` module
==============================

Usage ``BaseGeometry``
----------------------

Importing the class from the module:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


print the area
    >>> bg = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
    	      ...
    Exception: area() is not implemented


Trying to pass a non-integer argument
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", "10")
    Traceback (most recent call last):
    	      ...
    TypeError: name must be an integer


using a boolean value
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", True)
    Traceback (most recent call last):
    	      ...
    TypeError: name must be an integer


using a negative value
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", -10)
    Traceback (most recent call last):
    	      ...
    ValueError: name must be greater than 0


using a zero value
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 0)
    Traceback (most recent call last):
    	      ...
    ValueError: name must be greater than 0


using a +ive value
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 10)


using one argument to the integer_validator
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name")
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

Integer_validator with zero arguments
    >>> bg = BaseGeometry()
    >>> bg.integer_validator()
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'


using three arguments to integer_validator
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 14, 12)
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() takes 3 positional arguments but 4 were given


using one argument to area method
    >>> bg = BaseGeometry()
    >>> bg.area(10)
    Traceback (most recent call last):
    	      ...
    TypeError: area() takes 1 positional argument but 2 were given

using two arguments to area method
    >>> bg = BaseGeometry()
    >>> bg.area(10, 10)
    Traceback (most recent call last):
    	      ...
    TypeError: area() takes 1 positional argument but 3 were given

using a tuple to the method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", (10,))
    Traceback (most recent call last):
    	      ...
    TypeError: age must be an integer


Passing list to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", [12])
    Traceback (most recent call last):
    	      ...
    TypeError: age must be an integer


Passing dict to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", {1, 4})
    Traceback (most recent call last):
              ...
    TypeError: age must be an integer


using None to method
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", None)
    Traceback (most recent call last):
              ...
    TypeError: age must be an integer
