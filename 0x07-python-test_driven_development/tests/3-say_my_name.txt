# 3-say_my_name.txt

This modules prints a square ``say_my_name(first_name, last_name="")``.


``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Mark", "Kelvin")
    My name is Mark Kelvin

::

    >>> say_my_name("Jeremy Clarkson", "Jeffery")
    My name is Jeremy Clarkson Jeffry

The parameter ```last_name``` If no last name is provided,
an empty string is printed instead.

::

    >>> say_my_name("Mark")
    My name is Mark

checking for Invalid Names
==========================

The arguements ``first_name`` and ``last_name``` must be strings. Otherwise,
a TypeError is raised.

::

    >>> say_my_name(14, "May")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Clark", ["farm", "barn", "yard"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"Clark": 14, "Kent": 8}, 6.4)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

one name must be provided.

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_nam2'
